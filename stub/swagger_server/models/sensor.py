# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Sensor(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ts: str=None, source: str=None, value: float=None):  # noqa: E501
        """Sensor - a model defined in Swagger

        :param ts: The ts of this Sensor.  # noqa: E501
        :type ts: str
        :param source: The source of this Sensor.  # noqa: E501
        :type source: str
        :param value: The value of this Sensor.  # noqa: E501
        :type value: float
        """
        self.swagger_types = {
            'ts': str,
            'source': str,
            'value': float
        }

        self.attribute_map = {
            'ts': 'ts',
            'source': 'source',
            'value': 'value'
        }
        self._ts = ts
        self._source = source
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'Sensor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sensor of this Sensor.  # noqa: E501
        :rtype: Sensor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ts(self) -> str:
        """Gets the ts of this Sensor.


        :return: The ts of this Sensor.
        :rtype: str
        """
        return self._ts

    @ts.setter
    def ts(self, ts: str):
        """Sets the ts of this Sensor.


        :param ts: The ts of this Sensor.
        :type ts: str
        """

        self._ts = ts

    @property
    def source(self) -> str:
        """Gets the source of this Sensor.

        Source of the value  # noqa: E501

        :return: The source of this Sensor.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source: str):
        """Sets the source of this Sensor.

        Source of the value  # noqa: E501

        :param source: The source of this Sensor.
        :type source: str
        """

        self._source = source

    @property
    def value(self) -> float:
        """Gets the value of this Sensor.


        :return: The value of this Sensor.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this Sensor.


        :param value: The value of this Sensor.
        :type value: float
        """

        self._value = value
