# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class WaterAgain(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, watering_again: str=None):  # noqa: E501
        """WaterAgain - a model defined in Swagger

        :param watering_again: The watering_again of this WaterAgain.  # noqa: E501
        :type watering_again: str
        """
        self.swagger_types = {
            'watering_again': str
        }

        self.attribute_map = {
            'watering_again': 'wateringAgain'
        }
        self._watering_again = watering_again

    @classmethod
    def from_dict(cls, dikt) -> 'WaterAgain':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WaterAgain of this WaterAgain.  # noqa: E501
        :rtype: WaterAgain
        """
        return util.deserialize_model(dikt, cls)

    @property
    def watering_again(self) -> str:
        """Gets the watering_again of this WaterAgain.

        when to watering the plant again  # noqa: E501

        :return: The watering_again of this WaterAgain.
        :rtype: str
        """
        return self._watering_again

    @watering_again.setter
    def watering_again(self, watering_again: str):
        """Sets the watering_again of this WaterAgain.

        when to watering the plant again  # noqa: E501

        :param watering_again: The watering_again of this WaterAgain.
        :type watering_again: str
        """

        self._watering_again = watering_again
